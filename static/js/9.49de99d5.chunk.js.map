{"version":3,"sources":["../../src/ErrorMessage.tsx","common/components/FormErrors/index.jsx","common/hooks/useRedirect.js","pages/SignUp/index.jsx"],"names":["ErrorMessage","as","errors","name","message","render","rest","methods","useFormContext","error","get","messageFromRegister","types","props","Object","assign","children","React","messages","FormErrors","className","keys","length","useRedirect","params","history","useHistory","useEffect","some","condition","to","push","styled","auth","useSelector","state","userStatus","shallowEqual","role","userInfo","user","user_signup","loading","user_login","useMemo","useForm","register","handleSubmit","watch","password","useRef","current","dispatch","useDispatch","onSubmit","rePassword","data","signupAction","type","placeholder","ref","required","minLength","value","pattern","disabled","validate","color","size","theme","breakPoints","xl","colorSecondary","lg","sm"],"mappings":"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","file":"static/js/9.49de99d5.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useFormContext, get, FieldErrors } from 'react-hook-form';\nimport { Props } from './types';\n\nconst ErrorMessage = <\n  TFieldErrors extends FieldErrors,\n  TAs extends\n    | undefined\n    | React.ReactElement\n    | React.ComponentType<any>\n    | keyof JSX.IntrinsicElements = undefined\n>({\n  as,\n  errors,\n  name,\n  message,\n  render,\n  ...rest\n}: Props<TFieldErrors, TAs>) => {\n  const methods = useFormContext();\n  const error = get(errors || methods.errors, name);\n\n  if (!error) {\n    return null;\n  }\n\n  const { message: messageFromRegister, types } = error;\n  const props = Object.assign({}, rest, {\n    children: messageFromRegister || message,\n  });\n\n  return React.isValidElement(as)\n    ? React.cloneElement(as, props)\n    : render\n    ? (render({\n        message: messageFromRegister || message,\n        messages: types,\n      }) as React.ReactElement)\n    : React.createElement((as as string) || React.Fragment, props);\n};\n\nexport { ErrorMessage };\n","import { ErrorMessage } from \"@hookform/error-message\";\r\nimport React from \"react\";\r\n\r\nconst FormErrors = ({ errors }) => {\r\n  return (\r\n    <div className=\"error\">\r\n      {Object.keys(errors).length !== 0 && (\r\n        <ErrorMessage errors={errors} name={Object.keys(errors)[0]} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormErrors;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useRedirect = (params) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    params.some(({ condition, to }) => {\r\n      // console.log(condition, to);\r\n      if (condition) history.push(to);\r\n      return condition;\r\n    });\r\n    return () => {};\r\n  }, [params, history]);\r\n};\r\n\r\nexport default useRedirect;\r\n","import { ErrorMessage } from \"@hookform/error-message\";\r\nimport React, { useMemo, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport useRedirect from \"../../common/hooks/useRedirect\";\r\nimport { signupAction } from \"../../redux/action/userAction\";\r\nimport FormErrors from \"../../common/components/FormErrors\";\r\n\r\nconst SignUp = ({ className }) => {\r\n  const auth = useSelector((state) => state.userStatus.auth, shallowEqual);\r\n  const role = useSelector((state) => state.userStatus?.userInfo?.user?.role, shallowEqual);\r\n  const error = useSelector((state) => state.error?.user_signup, shallowEqual);\r\n  const loading = useSelector((state) => state.loading?.user_login, shallowEqual);\r\n  useRedirect(\r\n    useMemo(\r\n      () => [\r\n        { condition: role >= 1, to: \"/agency-dashboard\" },\r\n        { condition: auth, to: \"/user\" },\r\n      ],\r\n      [role, auth]\r\n    )\r\n  );\r\n  const { register, handleSubmit, errors, watch } = useForm();\r\n  const history = useHistory();\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n  const dispatch = useDispatch();\r\n  const handle = ({ rePassword, ...data }) => {\r\n    dispatch(\r\n      signupAction(data, (role) => {\r\n        if (role === 1) history.push(\"/agency-dashboard\");\r\n        if (role === 0) history.push(\"/getting-report\");\r\n        else history.push(\"/\");\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <main className={`${className} form d-flex align-items-center flex-grow-1`}>\r\n      <section className=\"form__form\">\r\n        <p className=\"fs__title--main fw-bold\">Đăng ký Ngay</p>\r\n        <p className=\"fs__text\">Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\r\n        <form onSubmit={handleSubmit(handle)}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Tên Đăng nhập\"\r\n            ref={register({\r\n              required: \"Bạn cần nhập tên đăng nhập\",\r\n              minLength: { value: 6, message: \"Tên đăng nhập có ít nhất 6 ký tự\" },\r\n              pattern: {\r\n                value: /^[a-zA-Z0-9]{6,}$/,\r\n                message: \"Tên đăng nhập không được chứa khoảng trống và ký tự đặc biệt\",\r\n              },\r\n            })}\r\n            disabled={loading}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            ref={register({ required: \"Bạn cần nhập email\" })}\r\n            disabled={loading}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Mật khẩu\"\r\n            ref={register({\r\n              required: \"Bạn cần nhập mật khẩu\",\r\n              minLength: { value: 6, message: \"Mật khẩu cần có ít nhất 6 ký tự\" },\r\n            })}\r\n            disabled={loading}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"rePassword\"\r\n            placeholder=\"Nhập lại mật khẩu\"\r\n            ref={register({\r\n              required: \"Bạn cần nhập lại mật khẩu\",\r\n              validate: (value) => value === password.current || \"Mật khẩu không khớp\",\r\n            })}\r\n            disabled={loading}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"absolute-centerd-inline-flex justify-content-center align-items-center\"\r\n            disabled={loading}\r\n          >\r\n            {!loading ? (\r\n              <div>Đăng Ký</div>\r\n            ) : (\r\n              <HashLoader color=\"#fafafa\" size={24} loading={true} />\r\n            )}\r\n          </button>\r\n          <div className=\"error\">{error}</div>\r\n          <FormErrors errors={errors} />\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default styled(SignUp)`\r\n  width: 100%;\r\n\r\n  .form {\r\n    /* &__img {\r\n      width: 60%;\r\n      display: flex;\r\n      background-color: rgba(0, 0, 0, 0.4);\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      padding: 3rem 100px;\r\n      position: relative;\r\n      &::after {\r\n        content: \"\";\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: -1;\r\n        background-image: url(/images/home3-slide-1.jpg);\r\n        background-size: cover;\r\n      }\r\n      p {\r\n        max-width: 400px;\r\n        font-weight: bold;\r\n        font-size: 2.5em;\r\n      }\r\n      &__logo {\r\n        > img {\r\n          width: 200px;\r\n        }\r\n      }\r\n      &__link {\r\n        a {\r\n          margin-right: 10px;\r\n          font-weight: bolder;\r\n        }\r\n      }\r\n      @media ${(props) => props.theme.breakPoints.xl} {\r\n        width: 50%;\r\n      }\r\n    } */\r\n    &__form {\r\n      text-align: center;\r\n      width: 100%;\r\n\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      padding: 0 40px;\r\n      > form {\r\n        margin: 0 auto;\r\n        width: 400px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        input,\r\n        button {\r\n          text-indent: 20px;\r\n          background-color: black;\r\n          color: #fafafa;\r\n          height: 50px;\r\n          margin: 10px 0;\r\n          border-radius: 8px;\r\n          border: 1px solid #fafafa;\r\n          font-weight: bold;\r\n          outline: none;\r\n          transition: border 0.2s ease-in;\r\n          &:focus {\r\n            border: 3px solid ${(props) => props.theme.colorSecondary};\r\n          }\r\n        }\r\n        [type=\"submit\"] {\r\n          background-color: ${(props) => props.theme.colorSecondary};\r\n          color: #fafafa;\r\n          border-width: 3px;\r\n          border-color: ${(props) => props.theme.colorSecondary};\r\n          &:hover {\r\n          }\r\n        }\r\n        input[type=\"date\"] {\r\n          text-indent: 10px;\r\n          &::-webkit-calendar-picker-indicator {\r\n            cursor: pointer;\r\n            filter: invert(1);\r\n            margin-right: 10px;\r\n          }\r\n        }\r\n        input::-webkit-input-placeholder {\r\n          color: #fafafa;\r\n        }\r\n      }\r\n      /* @media ${(props) => props.theme.breakPoints.xl} {\r\n        width: 50%;\r\n      } */\r\n      @media ${(props) => props.theme.breakPoints.lg} {\r\n        width: 100%;\r\n      }\r\n      @media ${(props) => props.theme.breakPoints.sm} {\r\n        > form {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}
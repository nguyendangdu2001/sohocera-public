{"version":3,"sources":["common/hooks/useAxios.js","common/hooks/useHandleErrors.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/react/useQuery.js","../../src/timeago-react.tsx","pages/UserManagement/PdfManagement.jsx","common/hooks/usePdf.js"],"names":["useAxios","token","useSelector","state","userStatus","userInfo","axios","defaults","headers","Authorization","useHandleErrors","props","logout","useLogoutAction","error","response","status","console","log","data","request","message","QueryObserver","_Subscribable","client","options","_this","call","this","trackedProps","bindMethods","setOptions","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","listeners","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","query","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","defaultQueryObserverOptions","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateResult","staleTime","updateStaleTimeout","refetchInterval","updateRefetchInterval","getOptimisticResult","defaultedOptions","getQueryCache","build","createResult","getCurrentResult","currentResult","trackResult","result","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","unsubscribe","subscribe","isFetching","isError","throwOnError","getCurrentQuery","fetch","fetchOptimistic","_this4","then","fetchOptions","_this5","promise","catch","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","undefined","clearInterval","placeholderData","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","isPreviousData","isPlaceholderData","optimisticResults","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","isLoading","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","x","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","onSuccess","onError","_this8","notifyManager","batch","onSettled","listener","Subscribable","retryOnMount","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","useRef","forceUpdate","useState","queryClient","useQueryClient","errorResetBoundary","useContext","batchCalls","suspense","useErrorBoundary","obsRef","current","useEffect","_ref","useQuery","arg1","arg2","arg3","parseQueryArgs","TimeAgo","styled","className","configs","handleError","Axios","a","config","apiGateWay","pdfs","err","usePdf","handleExport","post","onClick","map","pdf","target","href","apiResource","link_p","rel","name_p","datetime","created_at","locale","id_p","theme","colorSecondary"],"mappings":"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","file":"static/js/7.01deb106.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useAxios = () => {\r\n  const token = useSelector((state) => state.userStatus.userInfo?.token);\r\n  axios.defaults.headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: token ? `Bearer ${token}` : \"  \",\r\n  };\r\n  return axios;\r\n};\r\n\r\nexport default useAxios;\r\n","import useLogoutAction from \"./useLogoutAction\";\r\n\r\nconst useHandleErrors = (props) => {\r\n  const logout = useLogoutAction();\r\n  // const history = useHistory();\r\n  const handle = (error) => {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      if (error?.response?.status === 401) logout();\r\n      console.log(error.response.data);\r\n      console.log(error.response.status);\r\n      console.log(error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n      // http.ClientRequest in node.js\r\n      console.log(error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.log(\"Error\", error.message);\r\n    }\r\n  };\r\n  return [handle];\r\n};\r\n\r\nexport default useHandleErrors;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select)) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new Observer(queryClient, defaultedOptions);\n  }\n\n  var result = obsRef.current.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    obsRef.current.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    obsRef.current.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw obsRef.current.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = obsRef.current.trackResult(result);\n  }\n\n  return result;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { format, cancel, render } from 'timeago.js';\n/**\n * Convert input to a valid datetime string of <time> tag\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time\n * @param input\n * @returns datetime string\n */\nvar toDateTime = function (input) {\n    // let date: Date = new Date();\n    // if (input instanceof Date) {\n    //   date = input;\n    //   //@ts-ignore\n    // } else if (!isNaN(input) || /^\\d+$/.test(input)) {\n    //   //@ts-ignore\n    //   date = new Date(parseInt(input));\n    // } else {\n    //   date = new Date(input);\n    // }\n    // try {\n    //   return date.toISOString();\n    // } catch (e) {\n    //   console.error('invalid datetime');\n    //   return '';\n    // }\n    return '' + (input instanceof Date ? input.getTime() : input);\n};\nvar TimeAgo = /** @class */ (function (_super) {\n    __extends(TimeAgo, _super);\n    function TimeAgo() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.dom = null;\n        return _this;\n    }\n    TimeAgo.prototype.componentDidMount = function () {\n        // fixed #6 https://github.com/hustcc/timeago-react/issues/6\n        // to reduce the file size.\n        // const { locale } = this.props;\n        // if (locale !== 'en' && locale !== 'zh_CN') {\n        //   timeago.register(locale, require('timeago.js/locales/' + locale));\n        // }\n        // render it.\n        this.renderTimeAgo();\n    };\n    TimeAgo.prototype.componentDidUpdate = function () {\n        this.renderTimeAgo();\n    };\n    TimeAgo.prototype.renderTimeAgo = function () {\n        var _a = this.props, live = _a.live, datetime = _a.datetime, locale = _a.locale, opts = _a.opts;\n        // cancel all the interval\n        cancel(this.dom);\n        // if is live\n        if (live !== false) {\n            // live render\n            this.dom.setAttribute('datetime', toDateTime(datetime));\n            render(this.dom, locale, opts);\n        }\n    };\n    // remove\n    TimeAgo.prototype.componentWillUnmount = function () {\n        cancel(this.dom);\n    };\n    // for render\n    TimeAgo.prototype.render = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var _a = this.props, datetime = _a.datetime, live = _a.live, locale = _a.locale, opts = _a.opts, others = __rest(_a, [\"datetime\", \"live\", \"locale\", \"opts\"]);\n        return (React.createElement(\"time\", __assign({ ref: function (c) {\n                _this.dom = c;\n            } }, others), format(datetime, locale, opts)));\n    };\n    TimeAgo.defaultProps = {\n        live: true,\n        className: '',\n    };\n    return TimeAgo;\n}(React.Component));\nexport default TimeAgo;\n//# sourceMappingURL=timeago-react.js.map","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport useAxios from \"../../common/hooks/useAxios\";\r\n// import { useExportPdf } from \"../../common/hooks/useExportPdf\";\r\nimport { usePdf } from \"../../common/hooks/usePdf\";\r\nimport { config } from \"../../config/api\";\r\n\r\nconst PdfManagement = ({ className }) => {\r\n  const { data } = usePdf();\r\n  // const queryClient = useQueryClient()\r\n  const Axios = useAxios();\r\n  const handleExport = async () => {\r\n    const { data } = await Axios.post(`${config.apiGateWay}/dashboard/user/export-pdf`);\r\n\r\n    // console.log(data);\r\n    // queryClient.in;\r\n    // data.push(data);\r\n    // return data;\r\n  };\r\n\r\n  return (\r\n    <section className={`${className} user__management__export col-12 col-lg-9`}>\r\n      <header className=\"fs__title fw-bolder\">Xuất file PDF ERA của bạn</header>\r\n      <p className=\"fs__text my-3\">\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam facere deserunt illum\r\n        repellat. Quo enim tenetur quaerat. Perspiciatis voluptatum nihil ratione illum cumque\r\n        doloremque et dolor sed expedita? Qui, pariatur? Lorem ipsum dolor sit amet consectetur\r\n        adipisicing elit. Voluptas doloremque beatae possimus, laboriosam eveniet quo nesciunt et\r\n        deleniti facere vero!\r\n      </p>\r\n\r\n      <div className=\"button__export button-secondary\">\r\n        <div onClick={handleExport}>Xuất bản báo cáo</div>\r\n      </div>\r\n      <header className=\"fs__title fw-bolder mt-4\">Danh sách file pdf của bạn</header>\r\n      <section className=\"pdf__list d-flex flex-column my-4\">\r\n        {data?.map((pdf) => {\r\n          return (\r\n            <div\r\n              key={pdf.id_p}\r\n              className=\"pdf__item d-flex justify-content-between p-3 button-secondary--outline\"\r\n            >\r\n              <a target=\"_blank\" href={`${config.apiResource}${pdf.link_p}`} rel=\"noreferrer\">\r\n                {pdf.name_p}\r\n              </a>\r\n              <TimeAgo datetime={pdf.created_at} locale=\"vi\" />\r\n            </div>\r\n          );\r\n        })}\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default styled(PdfManagement)`\r\n  &.user__management {\r\n    &__export {\r\n      .pdf {\r\n        &__list {\r\n          row-gap: 12px;\r\n        }\r\n        &__item {\r\n          border-radius: 12px;\r\n          a {\r\n            text-transform: capitalize;\r\n            font-weight: bold;\r\n            color: inherit;\r\n          }\r\n        }\r\n      }\r\n      .button__export {\r\n        display: inline-flex;\r\n        padding: 10px 15px;\r\n        /* background-color: ${(props) => props.theme.colorSecondary}; */\r\n        font-weight: bolder;\r\n        border-radius: 12px;\r\n        div {\r\n          cursor: pointer;\r\n          /* color: #fafafa; */\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useQuery } from \"react-query\";\r\nimport { config } from \"../../config/api\";\r\nimport useAxios from \"./useAxios\";\r\nimport useHandleErrors from \"./useHandleErrors\";\r\n\r\nexport const usePdf = (configs) => {\r\n  const [handleError] = useHandleErrors();\r\n  const Axios = useAxios();\r\n  const queryInstance = useQuery(\r\n    [\"user\", \"usePdf\"],\r\n    async () => {\r\n      const { data } = await Axios.get(\r\n        `${config.apiGateWay}/dashboard/user/pdf`\r\n      );\r\n      console.log(data.pdfs);\r\n      return data.pdfs;\r\n    },\r\n    {\r\n      onError: (err) => {\r\n        handleError(err);\r\n      },\r\n      // onSuccess: (data) => onSuccess(data),\r\n    }\r\n  );\r\n  return queryInstance;\r\n};\r\n"],"sourceRoot":""}
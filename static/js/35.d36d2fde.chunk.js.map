{"version":3,"sources":["pages/UserManagement/VideoManagement.jsx","common/hooks/useUserVideos.js"],"names":["styled","className","data","configs","useHandleErrors","handleError","Axios","useAxios","useQuery","a","get","config","apiGateWay","rs","onError","err","useUserVideos","useState","video","apiResource","url","seturl","videoContainer","useRef","handleVideo","useCallback","useEffect","current","scrollIntoView","behavior","block","section","layout","div","ref","width","height","controls","muted","playing","style","map","i","name_i","number_order","onClick","src","alt","desc_i","props","theme","colorCard"],"mappings":"+PAyEeA,uBAlES,SAAC,GAAmB,IAAD,IAAhBC,EAAgB,EAAhBA,UACjBC,ECHmB,SAACC,GAAa,IAAD,EAClBC,cAAfC,EADiC,oBAElCC,EAAQC,cAed,OAdsBC,YACpB,CAAC,OAAQ,cADmB,sBAE5B,8BAAAC,EAAA,sEACyBH,EAAMI,IAAN,UAAaC,IAAOC,WAApB,0BADzB,uBACUV,EADV,EACUA,KADV,kBAGSA,EAAKW,IAHd,2CAKA,CACEC,QAAS,SAACC,GACRV,EAAYU,MDTDC,GAATd,KADiC,EAEnBe,oBAChB,OAAJf,QAAI,IAAJA,GAAA,UAAAA,EAAO,UAAP,eAAWgB,QAAX,UAAuBP,IAAOQ,aAA9B,cAA4CjB,QAA5C,IAA4CA,GAA5C,UAA4CA,EAAO,UAAnD,aAA4C,EAAWgB,QAHhB,mBAElCE,EAFkC,KAE7BC,EAF6B,KAKnCC,EAAiBC,iBAAO,MACxBC,EAAcC,uBAAY,SAACL,GAC/BA,GAAOC,EAAO,GAAD,OAAIV,IAAOQ,aAAX,OAAyBC,MACrC,IASH,OARAM,qBAAU,WAAO,IAAD,EAMd,OALIN,IACF,UAAAE,EAAeK,eAAf,SAAwBC,eAAe,CACrCC,SAAU,SACVC,MAAO,YAEJ,eACN,CAACV,IAEF,eAAC,IAAEW,QAAH,CACEC,QAAM,EACN/B,UAAS,UAAKA,EAAL,6CAFX,UAIE,wBAAQA,UAAU,2BAAlB,qCACA,cAAC,IAAEgC,IAAH,CAAOD,QAAM,EAAC/B,UAAU,oBAAoBiC,IAAKZ,EAAjD,SACGF,GACC,cAAC,IAAD,CACEe,MAAM,OACNC,OAAO,OACPhB,IAAKA,EACLiB,UAAU,EACVC,OAAO,EACPC,SAAS,EACTC,MAAO,CAAEL,MAAO,OAAQC,OAAQ,YAItC,cAAC,IAAEH,IAAH,CAAOD,QAAM,EAAb,gBACG9B,QADH,IACGA,OADH,EACGA,EAAMuC,KAAI,SAACvB,EAAOwB,GAAO,IAAD,EACUxB,GAAS,GAAlCyB,EADe,EACfA,OAAQC,EADO,EACPA,aAChB,OACE,eAAC,IAAEX,IAAH,CACED,QAAM,EACN/B,UAAU,OAEV4C,QAAS,kBAAMrB,EAAW,OAACN,QAAD,IAACA,OAAD,EAACA,EAAOA,QAJpC,UAME,qBAAKjB,UAAU,cAAf,SACE,qBACE6C,IAAI,sEACJC,IAAI,OAGR,sBAAK9C,UAAU,aAAf,UACE,oBAAGA,UAAU,uCAAb,UACG0C,EADH,IACYC,KAEZ,mBAAG3C,UAAU,gCAAb,gBAA8CiB,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAO8B,cAblDN,aAuBJ1C,CAAf,2vBAS4B,SAACiD,GAAD,OAAWA,EAAMC,MAAMC","file":"static/js/35.d36d2fde.chunk.js","sourcesContent":["import { m } from \"framer-motion\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport ReactPlayer from \"react-player/lazy\";\r\nimport styled from \"styled-components\";\r\nimport { useUserVideos } from \"../../common/hooks/useUserVideos\";\r\nimport { config } from \"../../config/api\";\r\n\r\nconst VideoManagement = ({ className }) => {\r\n  const { data } = useUserVideos();\r\n  const [url, seturl] = useState(\r\n    data?.[0]?.video && `${config.apiResource}${data?.[0]?.video}`\r\n  );\r\n  const videoContainer = useRef(null);\r\n  const handleVideo = useCallback((url) => {\r\n    url && seturl(`${config.apiResource}${url}`);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (url)\r\n      videoContainer.current?.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"center\",\r\n      });\r\n    return () => {};\r\n  }, [url]);\r\n  return (\r\n    <m.section\r\n      layout\r\n      className={`${className} user__management__video col-12 col-md-10`}\r\n    >\r\n      <header className=\"fs__title fw-bolder mb-2\">Video của bạn</header>\r\n      <m.div layout className=\"step__form__video\" ref={videoContainer}>\r\n        {url && (\r\n          <ReactPlayer\r\n            width=\"100%\"\r\n            height=\"auto\"\r\n            url={url}\r\n            controls={true}\r\n            muted={true}\r\n            playing={true}\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          />\r\n        )}\r\n      </m.div>\r\n      <m.div layout>\r\n        {data?.map((video, i) => {\r\n          const { name_i, number_order } = video || {};\r\n          return (\r\n            <m.div\r\n              layout\r\n              className=\"card\"\r\n              key={i}\r\n              onClick={() => handleVideo(video?.video)}\r\n            >\r\n              <div className=\"card__video\">\r\n                <img\r\n                  src=\"https://www.sohoceravietnam.com/public/img/314a50ada9025a5c0313.jpg\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"card__body\">\r\n                <p className=\"card__body__title fs__text fw-bolder\">\r\n                  {name_i} {number_order}\r\n                </p>\r\n                <p className=\"card__body__date fs__smallest\">{video?.desc_i}</p>\r\n              </div>\r\n            </m.div>\r\n          );\r\n        })}\r\n      </m.div>\r\n    </m.section>\r\n  );\r\n};\r\n\r\nexport default styled(VideoManagement)`\r\n  &.user__management {\r\n    &__video {\r\n      /* width: 60%; */\r\n      .card {\r\n        cursor: pointer;\r\n        margin-top: 20px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        background-color: ${(props) => props.theme.colorCard};\r\n        border-radius: 16px;\r\n        padding: 10px 20px 10px 10px;\r\n        &__video {\r\n          width: 150px;\r\n          height: 100px;\r\n          margin-right: 20px;\r\n          img {\r\n            border-radius: 16px;\r\n            width: auto;\r\n            height: 100%;\r\n            object-fit: cover;\r\n          }\r\n        }\r\n        &__body {\r\n          display: flex;\r\n          flex-direction: column;\r\n          p:first-child {\r\n            margin-bottom: 5px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useQuery } from \"react-query\";\r\nimport { config } from \"../../config/api\";\r\nimport useAxios from \"./useAxios\";\r\nimport useHandleErrors from \"./useHandleErrors\";\r\n\r\nexport const useUserVideos = (configs) => {\r\n  const [handleError] = useHandleErrors();\r\n  const Axios = useAxios();\r\n  const queryInstance = useQuery(\r\n    [\"user\", \"userVideos\"],\r\n    async () => {\r\n      const { data } = await Axios.get(`${config.apiGateWay}/dashboard/user/video`);\r\n      // console.log(data);\r\n      return data.rs;\r\n    },\r\n    {\r\n      onError: (err) => {\r\n        handleError(err);\r\n      },\r\n      // onSuccess: (data) => onSuccess(data),\r\n    }\r\n  );\r\n  return queryInstance;\r\n};\r\n"],"sourceRoot":""}
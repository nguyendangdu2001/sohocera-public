{"version":3,"sources":["common/hooks/useRedirect.js","pages/UserManagement/Nav.jsx","pages/UserManagement/index.jsx"],"names":["useRedirect","params","history","useHistory","useEffect","some","condition","to","cb","replace","memo","styled","route","className","url","useRouteMatch","src","alt","reverse","map","path","name","exact","activeClassName","props","theme","colorTextTitle","colorSecondary","PdfManagement","lazy","UserInfoManagement","VideoManagement","parentPath","isActive","useSelector","state","userStatus","userInfo","user","is_active","shallowEqual","useMemo","toast","info","component","fallback","id"],"mappings":"yHAAA,mBAkBeA,IAfK,SAACC,GACnB,IAAMC,EAAUC,cAChBC,qBAAU,WASR,OARAH,EAAOI,MAAK,YAA4B,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,GAAIC,EAAS,EAATA,GAM5B,OAJIF,IACFJ,EAAQO,QAAQF,GACd,OAAFC,QAAE,IAAFA,QAEKF,KAEF,eACN,CAACL,EAAQC,M,sHCgBCQ,iBAAKC,aA1BR,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACZC,EAAQC,cAARD,IACR,OACE,sBACED,UAAS,UAAKA,EAAL,wEADX,UAGE,qBAAKA,UAAU,8DAAf,SACE,qBAAKG,IAAI,sDAAsDC,IAAI,aAErE,qBAAKJ,UAAS,8DAAd,SACGD,EAAMM,UAAUC,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACnB,cAAC,IAAD,CACEC,OAAK,EACLf,GAAE,UAAKO,GAAL,OAAWM,GAEbG,gBAAgB,SAChBV,UAAU,UALZ,SAOGQ,GAJIA,aAYGV,CAAA,IAAD,ymBAyBF,SAACa,GAAD,OAAWA,EAAMC,MAAMC,kBACL,SAACF,GAAD,OAAWA,EAAMC,MAAME,mBClDpDC,EAAgBC,gBAAK,kBAAM,wDAC3BC,EAAqBD,gBAAK,kBAAM,wDAChCE,EAAkBF,gBAAK,kBAAM,kCAkEpBlB,uBAhEQ,SAAC,GAAmB,IAAjBE,EAAgB,EAAhBA,UACVmB,EAAejB,cAArBK,KACFa,EAAWC,aACf,SAACC,GAAD,2BAAWA,EAAMC,kBAAjB,iBAAW,EAAkBC,gBAA7B,iBAAW,EAA4BC,YAAvC,aAAW,EAAkCC,YAC7CC,KAEFxC,YACEyC,mBACE,iBAAM,CACJ,CACEnC,WAAY2B,EACZ1B,GAAI,kBACJC,GAAI,WACFkC,IAAMC,KACJ,0HAKR,CAACV,KAGL,IAAMrB,EAAQ,CACZ,CAAEQ,KAAM,OAAQwB,UAAWhB,EAAeP,KAAM,WAAYC,OAAO,GACnE,CACEF,KAAM,SACNwB,UAAWb,EACXV,KAAM,8BACNC,OAAO,GAET,CACEF,KAAM,GACNwB,UAAWd,EACXT,KAAM,6BACNC,OAAO,IAGX,OACE,uBACET,UAAS,UAAKA,EAAL,gFADX,UAGE,cAAC,EAAD,CAAKD,MAAOA,IACZ,cAAC,WAAD,CACEiC,SACE,qBAAKC,GAAG,iBAAR,SACE,qBAAKA,GAAG,aAHd,SAOE,cAAC,IAAD,UACGlC,EAAMO,KAAI,gBAAGC,EAAH,EAAGA,KAAMwB,EAAT,EAASA,UAAWvB,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,MAA1B,OACT,cAAC,IAAD,CAEEF,KAAI,UAAKY,GAAL,OAAkBZ,GACtBwB,UAAWA,EACXtB,MAAOA,GAHFD,eAYJV,CAAf","file":"static/js/27.8ed5553a.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useRedirect = (params) => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    params.some(({ condition, to, cb }) => {\r\n      // console.log(condition, to);\r\n      if (condition) {\r\n        history.replace(to);\r\n        cb?.();\r\n      }\r\n      return condition;\r\n    });\r\n    return () => {};\r\n  }, [params, history]);\r\n};\r\n\r\nexport default useRedirect;\r\n","import React, { memo } from \"react\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Nav = ({ route, className }) => {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <div\r\n      className={`${className} pe-0 pe-xl-5 pe-lg-4 pe-md-3 pe-sm-2 mb-3 mb-lg-0   col-12 col-md-2`}\r\n    >\r\n      <div className=\"avatar justify-content-center d-none d-md-flex mx-auto mb-3\">\r\n        <img src=\"https://www.sohoceravietnam.com/public/img/meow.jpg\" alt=\"avatar\" />\r\n      </div>\r\n      <nav className={`user__management__navigation d-flex flex-row flex-md-column`}>\r\n        {route.reverse().map(({ path, name }) => (\r\n          <NavLink\r\n            exact\r\n            to={`${url}${path}`}\r\n            key={name}\r\n            activeClassName=\"active\"\r\n            className=\"fw-bold\"\r\n          >\r\n            {name}\r\n          </NavLink>\r\n        ))}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(styled(Nav)`\r\n  .avatar {\r\n    position: relative;\r\n    width: 80%;\r\n    padding-top: 80%;\r\n    img {\r\n      /* $size: 100px; */\r\n      position: absolute;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n      /* width: 200px; */\r\n      /* height: 200px; */\r\n      border-radius: 50%;\r\n    }\r\n  }\r\n  .user__management {\r\n    &__navigation {\r\n      column-gap: 16px; /* margin: 0 32px 0 0; */\r\n      a {\r\n        /* margin: 0 20px 0 0; */\r\n        padding: 10px 0;\r\n      }\r\n      .active {\r\n        color: ${(props) => props.theme.colorTextTitle};\r\n        border-bottom: 2px solid ${(props) => props.theme.colorSecondary};\r\n      }\r\n    }\r\n  }\r\n`);\r\n","import React, { lazy, Suspense, useMemo } from \"react\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport useRedirect from \"../../common/hooks/useRedirect\";\r\nimport Nav from \"./Nav\";\r\nconst PdfManagement = lazy(() => import(\"./PdfManagement\"));\r\nconst UserInfoManagement = lazy(() => import(\"./UserInfoManagement\"));\r\nconst VideoManagement = lazy(() => import(\"./VideoManagement\"));\r\n\r\nconst UserManagement = ({ className }) => {\r\n  const { path: parentPath } = useRouteMatch();\r\n  const isActive = useSelector(\r\n    (state) => state.userStatus?.userInfo?.user?.is_active,\r\n    shallowEqual\r\n  );\r\n  useRedirect(\r\n    useMemo(\r\n      () => [\r\n        {\r\n          condition: !isActive,\r\n          to: \"/getting-report\",\r\n          cb: () => {\r\n            toast.info(\r\n              \"Bạn cần kích hoạt báo cáo trước khi đến trang người dùng\"\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      [isActive]\r\n    )\r\n  );\r\n  const route = [\r\n    { path: \"/pdf\", component: PdfManagement, name: \"File PDF\", exact: true },\r\n    {\r\n      path: \"/video\",\r\n      component: VideoManagement,\r\n      name: \"Xem video của bạn\",\r\n      exact: true,\r\n    },\r\n    {\r\n      path: \"\",\r\n      component: UserInfoManagement,\r\n      name: \"Thông tin cá nhân\",\r\n      exact: false,\r\n    },\r\n  ];\r\n  return (\r\n    <main\r\n      className={`${className} container user__management mt-3 mt-lg-5 flex-column flex-md-row flex-grow-1`}\r\n    >\r\n      <Nav route={route} />\r\n      <Suspense\r\n        fallback={\r\n          <div id=\"loader-wrapper\">\r\n            <div id=\"loader\"></div>\r\n          </div>\r\n        }\r\n      >\r\n        <Switch>\r\n          {route.map(({ path, component, name, exact }) => (\r\n            <Route\r\n              key={name}\r\n              path={`${parentPath}${path}`}\r\n              component={component}\r\n              exact={exact}\r\n            />\r\n          ))}\r\n        </Switch>\r\n      </Suspense>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default styled(UserManagement)`\r\n  position: relative;\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\n"],"sourceRoot":""}
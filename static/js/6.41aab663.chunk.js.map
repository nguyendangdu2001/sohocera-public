{"version":3,"sources":["common/hooks/useAxios.js","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/react/useQuery.js","common/hooks/useBlogs.js","common/components/BlogCard/index.jsx","helper/chunkMap.js","pages/Blogs/index.jsx"],"names":["useAxios","props","token","useSelector","state","userStatus","userInfo","axios","defaults","headers","Authorization","QueryObserver","_Subscribable","client","options","_this","call","this","trackedProps","bindMethods","setOptions","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","listeners","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","query","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","defaultQueryObserverOptions","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateResult","staleTime","updateStaleTimeout","refetchInterval","updateRefetchInterval","getOptimisticResult","defaultedOptions","getQueryCache","build","createResult","getCurrentResult","currentResult","trackResult","result","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","unsubscribe","subscribe","isFetching","isError","throwOnError","error","getCurrentQuery","fetch","fetchOptimistic","_this4","then","fetchOptions","_this5","promise","catch","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","undefined","clearInterval","data","placeholderData","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","optimisticResults","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","isLoading","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","x","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","onSuccess","onError","_this8","notifyManager","batch","onSettled","listener","Subscribable","retryOnMount","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","useRef","forceUpdate","useState","queryClient","useQueryClient","errorResetBoundary","useContext","batchCalls","suspense","useErrorBoundary","obsRef","current","useEffect","_ref","useQuery","arg1","arg2","arg3","parseQueryArgs","useBlogs","take","Axios","queryInstance","a","config","apiGateWay","console","log","styled","slug","name","className","shortDesc","thumbnail","to","src","alt","theme","colorCard","chunkMap","arr","chunkSize","func","chunks","i","n","slice","Math","floor","blogs","chunk","index","map","blog","BlogCard","name_b","id_blog"],"mappings":"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","file":"static/js/6.41aab663.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useAxios = (props) => {\r\n  const token = useSelector((state) => state.userStatus.userInfo?.token);\r\n  axios.defaults.headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: token ? `Bearer ${token}` : \"  \",\r\n  };\r\n  return axios;\r\n};\r\n\r\nexport default useAxios;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select)) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var obsRef = React.useRef();\n\n  if (!obsRef.current) {\n    obsRef.current = new Observer(queryClient, defaultedOptions);\n  }\n\n  var result = obsRef.current.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = obsRef.current.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    obsRef.current.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    obsRef.current.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw obsRef.current.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = obsRef.current.trackResult(result);\n  }\n\n  return result;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import { useQuery } from \"react-query\";\r\nimport { config } from \"../../config/api\";\r\nimport useAxios from \"./useAxios\";\r\n\r\nexport const useBlogs = (take = 4) => {\r\n  const Axios = useAxios();\r\n  const queryInstance = useQuery([\"blogs\", { take }], async () => {\r\n    const { data } = await Axios.get(`${config.apiGateWay}/blog?take=${take}`);\r\n    console.log(data);\r\n    return data;\r\n  });\r\n  return queryInstance;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BlogCard = ({ slug, name, shortDesc, className, thumbnail }) => {\r\n  return (\r\n    <Link to={`/blog/${slug}`} className={className}>\r\n      <div className=\"blog__card\">\r\n        <div className=\"blog__card__img\">\r\n          <img src={thumbnail} alt={name} />\r\n        </div>\r\n        <div className=\"blog__card__body\">\r\n          <div className=\"blog__card__body__title\">\r\n            <p className=\"fs__title\">{name}</p>\r\n          </div>\r\n          <div className=\"blog__card__body__content\">\r\n            <p className=\"fs__text\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Delectus minus debitis\r\n              consequuntur nemo optio rem.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default styled(BlogCard)`\r\n  .blog__card {\r\n    /* $radius: 12px; */\r\n    background-color: ${(props) => props.theme.colorCard};\r\n    border-radius: 12px;\r\n    &__img {\r\n      > img {\r\n        border-top-left-radius: 12px;\r\n        border-top-right-radius: 12px;\r\n        width: 100%;\r\n        height: 200px;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n    &__body {\r\n      padding: 20px;\r\n      &__title {\r\n        line-height: 30px;\r\n        font-weight: bolder;\r\n        p {\r\n          display: -webkit-box;\r\n          -webkit-box-orient: vertical;\r\n          -webkit-line-clamp: 3;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n        }\r\n      }\r\n      &__content {\r\n        p {\r\n          display: -webkit-box;\r\n          -webkit-box-orient: vertical;\r\n          -webkit-line-clamp: 3;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export const chunkMap = (arr, chunkSize, func) => {\r\n  var chunks = [],\r\n    i = 0,\r\n    n = arr.length;\r\n\r\n  while (i < n) {\r\n    chunks.push(func(arr.slice(i, (i += chunkSize)), Math.floor(i / chunkSize)));\r\n  }\r\n\r\n  return chunks;\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BlogCard from \"../../common/components/BlogCard\";\r\nimport { useBlogs } from \"../../common/hooks/useBlogs\";\r\nimport { chunkMap } from \"../../helper/chunkMap\";\r\n\r\nconst Blogs = ({ className }) => {\r\n  const { data: blogs } = useBlogs(6);\r\n  return (\r\n    <div className={className}>\r\n      <header className=\"container\">\r\n        <p className=\"fs__title--main text-center fw-bolder mt-5\">Blog</p>\r\n        <p className=\"fs__text text-center w-lg-50 mx-auto\">\r\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Delectus veniam, eum quo sed\r\n          voluptatum neque aliquid dolorem, error quidem officia temporibus voluptatibus minus\r\n          eligendi architecto.\r\n        </p>\r\n      </header>\r\n\r\n      <main className=\"container\">\r\n        {blogs &&\r\n          chunkMap(blogs.blogs, 3, (chunk, index) => {\r\n            return (\r\n              <div key={index} className=\"row mt-lg-5\">\r\n                {chunk.map((blog) => (\r\n                  <div className=\"col-12 col-lg-4 mb-4 mb-lg-0\" key={blog.id_blog}>\r\n                    <BlogCard name={blog.name_b} slug={blog.slug} thumbnail={blog.thumbnail} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            );\r\n          })}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default styled(Blogs)``;\r\n"],"sourceRoot":""}